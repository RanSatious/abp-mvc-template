@using Abp.Application.Navigation
@using Abp.Collections.Extensions
@using MyCompany.MyProject.Web.Views
@model MyCompany.MyProject.Web.Models.Layout.MainMenuNavViewModel
@{
    var calculateMenuUrl = new Func<string, string>((url) =>
    {
        if (string.IsNullOrEmpty(url))
        {
            return ApplicationPath;
        }

        if (UrlChecker.IsRooted(url))
        {
            return url;
        }

        return ApplicationPath + url;
    });

    var activeNames = new List<string>();
    var parent = string.Empty;
    foreach (string name in Model.ActiveMenuItemName.Split('.'))
    {
        activeNames.Add(string.IsNullOrEmpty(parent) ? name : string.Format("{0}.{1}", parent, name));
        parent = activeNames.Last();
    }
    var activeMenus = new List<UserMenuItem>();
    UserMenuItem parentMenu = null;
    foreach (var name in activeNames)
    {
        var sub = (parentMenu == null ? Model.MainMenu.Items : parentMenu.Items).FirstOrDefault(d => d.Name == name);
        if (sub != null)
        {
            activeMenus.Add(sub);
            parentMenu = sub;
        }
    }
    ViewBag.activeMenus = activeMenus;
}
<ul class="layui-nav @(Model.IsLeft ? "layui-layout-left" : "layui-nav-tree")">
    @foreach (var menuItem in Model.MainMenu.Items)
    {
        if (menuItem.Items.Count == 0)
        {
            <li class="layui-nav-item @(activeNames.Contains(menuItem.Name) ? "layui-this" : "")">
                <a href="@calculateMenuUrl(menuItem.Url)">@menuItem.DisplayName</a>
            </li>
        }
        else
        {
            <li class="layui-nav-item @(activeNames.Contains(menuItem.Name) ? (Model.IsLeft ? "layui-this" : "layui-nav-itemed") : "")">
                <a href="javascript:;">@menuItem.DisplayName</a>
                <dl class="layui-nav-child">
                    @foreach (var subMenuItem in menuItem.Items)
                    {
                        <dd class="@(activeNames.Contains(subMenuItem.Name) ? "layui-this" : "")">
                            <a href="@calculateMenuUrl(subMenuItem.Url)">@subMenuItem.DisplayName</a>
                        </dd>
                    }
                </dl>
            </li>
        }

    }
</ul>